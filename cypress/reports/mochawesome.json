{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-21T04:47:17.813Z",
    "end": "2024-10-21T04:47:22.498Z",
    "duration": 4685,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b885dedc-b752-4649-abd0-0f5ad04ee818",
      "title": "",
      "fullFile": "cypress\\e2e\\API Tests\\TestesSwapi.cy.js",
      "file": "cypress\\e2e\\API Tests\\TestesSwapi.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f33f722-0f10-41a5-a342-4eff673ef16c",
          "title": "API Tests - SWAPI",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar uma lista de filmes",
              "fullTitle": "API Tests - SWAPI Deve retornar uma lista de filmes",
              "timedOut": null,
              "duration": 1809,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://swapi.dev/api/films/').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body).to.have.property('results');\n  expect(response.body.results).to.be.an('array');\n  expect(response.body.results.length).to.be.greaterThan(0);\n  const firstFilm = response.body.results[0];\n  expect(firstFilm).to.have.property('title');\n  expect(firstFilm).to.have.property('episode_id');\n  expect(firstFilm).to.have.property('opening_crawl');\n  expect(firstFilm).to.have.property('director');\n  expect(firstFilm).to.have.property('producer');\n  expect(firstFilm).to.have.property('release_date');\n});",
              "err": {},
              "uuid": "2b5de7f1-67b8-4213-afd7-cf1e367a1108",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida retorno negativo para filme 10",
              "fullTitle": "API Tests - SWAPI Valida retorno negativo para filme 10",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/films/10',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n  expect(response.body).to.exist;\n});",
              "err": {},
              "uuid": "6237f754-bf41-4c8f-8d13-508e00192d1b",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida retorno positivo para filme 2",
              "fullTitle": "API Tests - SWAPI Valida retorno positivo para filme 2",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/films/2',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n});",
              "err": {},
              "uuid": "cfc0d18c-5844-4060-b1a2-538ccd6e99f5",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida retorno de episódio correto",
              "fullTitle": "API Tests - SWAPI Valida retorno de episódio correto",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/films/2',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body.title).to.equal('The Empire Strikes Back');\n});",
              "err": {},
              "uuid": "4c615cf4-4e1e-407f-8535-a0fa6a5dc684",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida id do Episódio com sucesso",
              "fullTitle": "API Tests - SWAPI Valida id do Episódio com sucesso",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/films/2',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body.episode_id).to.equal(5);\n});",
              "err": {},
              "uuid": "7abef266-4d7b-4dce-956f-88f54f47edb1",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida se id do Episódio é number com sucesso",
              "fullTitle": "API Tests - SWAPI Valida se id do Episódio é number com sucesso",
              "timedOut": null,
              "duration": 315,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/films/2',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body.episode_id).to.equal(5);\n  expect(response.body.episode_id).to.be.a('number');\n});",
              "err": {},
              "uuid": "2fb41696-89b0-46c2-b467-ba387906a86d",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida formato de data - yyyy-mm-dd",
              "fullTitle": "API Tests - SWAPI Valida formato de data - yyyy-mm-dd",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/films/2',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body.release_date).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\n});",
              "err": {},
              "uuid": "3808f7ba-e028-4dbe-b856-5f12c7f747f2",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve retornar 404 para requisição inválida",
              "fullTitle": "API Tests - SWAPI Deve retornar 404 para requisição inválida",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/people/?format=jsonx',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n  expect(response.body).to.exist;\n});",
              "err": {},
              "uuid": "2d85d309-d94f-49eb-a89c-1e52a93bd519",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida peso e altura personagem - C-3PO",
              "fullTitle": "API Tests - SWAPI Valida peso e altura personagem - C-3PO",
              "timedOut": null,
              "duration": 275,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/people/2/',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body.height).to.eq('167');\n  expect(response.body.mass).to.eq('75');\n});",
              "err": {},
              "uuid": "c2cb24c2-46d7-4f0c-9b34-199ceddf0fbe",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida filmes do personagem - C-3PO",
              "fullTitle": "API Tests - SWAPI Valida filmes do personagem - C-3PO",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://swapi.dev/api/people/2/',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.exist;\n  expect(response.body.films[0]).to.eq('https://swapi.dev/api/films/1/');\n  expect(response.body.films[1]).to.eq('https://swapi.dev/api/films/2/');\n  expect(response.body.films[2]).to.eq('https://swapi.dev/api/films/3/');\n  expect(response.body.films[3]).to.eq('https://swapi.dev/api/films/4/');\n  expect(response.body.films[4]).to.eq('https://swapi.dev/api/films/5/');\n  expect(response.body.films[5]).to.eq('https://swapi.dev/api/films/6/');\n});",
              "err": {},
              "uuid": "a4d54b11-f682-48d2-8ee6-1571467eab5c",
              "parentUUID": "3f33f722-0f10-41a5-a342-4eff673ef16c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b5de7f1-67b8-4213-afd7-cf1e367a1108",
            "6237f754-bf41-4c8f-8d13-508e00192d1b",
            "cfc0d18c-5844-4060-b1a2-538ccd6e99f5",
            "4c615cf4-4e1e-407f-8535-a0fa6a5dc684",
            "7abef266-4d7b-4dce-956f-88f54f47edb1",
            "2fb41696-89b0-46c2-b467-ba387906a86d",
            "3808f7ba-e028-4dbe-b856-5f12c7f747f2",
            "2d85d309-d94f-49eb-a89c-1e52a93bd519",
            "c2cb24c2-46d7-4f0c-9b34-199ceddf0fbe",
            "a4d54b11-f682-48d2-8ee6-1571467eab5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}